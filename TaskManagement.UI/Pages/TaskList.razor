@page "/tasklist"
@using TaskManagement.UI.Data;
@using TaskManagement.UI.Services;
@inject ITaskService TaskService

<h3>Task Management</h3>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Description</th>
            <th>Completed</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in Tasks)
        {
            <tr>
                <td>@task.Id</td>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>@(task.IsCompleted ? "Yes" : "No")</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditTask(task)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteTask(task.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="container mt-4">
    <h4>@(EditingTask != null ? "Edit Task" : "Add Task")</h4>
    <form class="row g-3" @onsubmit="SaveTask">
        <!-- Title -->
        <div class="col-md-12">
            <label for="title" class="form-label">Title</label>
            <input type="text" id="title" class="form-control" @bind="CurrentTask.Title" placeholder="Enter task title" required />
        </div>

        <!-- Description -->
        <div class="col-md-12">
            <label for="description" class="form-label">Description</label>
            <textarea id="description" class="form-control" @bind="CurrentTask.Description" rows="3" placeholder="Enter task description"></textarea>
        </div>

        <!-- Completed Checkbox -->
        <div class="col-md-12">
            <div class="form-check">
                <input type="checkbox" id="completed" class="form-check-input" @bind="CurrentTask.IsCompleted" />
                <label for="completed" class="form-check-label">Completed</label>
            </div>
        </div>

        <!-- Save Button -->
        <div class="col-md-12">
            <button type="submit" class="btn btn-success">Save</button>
        </div>
    </form>
</div>


@code {
    private List<TaskModel> Tasks = new();
    private TaskModel CurrentTask = new();
    private TaskModel? EditingTask;

    protected override async Task OnInitializedAsync()
    {
        Tasks = await TaskService.GetTasksAsync();
    }

    private void EditTask(TaskModel task)
    {
        EditingTask = task;
        CurrentTask = new TaskModel
            {
                Id = task.Id,
                Title = task.Title,
                Description = task.Description,
                IsCompleted = task.IsCompleted
            };
    }

    private async Task SaveTask()
    {
        if (EditingTask == null)
        {
            await TaskService.AddTaskAsync(CurrentTask);
        }
        else
        {
            await TaskService.UpdateTaskAsync(CurrentTask);
            EditingTask = null;
        }

        CurrentTask = new TaskModel();
        Tasks = await TaskService.GetTasksAsync();
    }

    private async Task DeleteTask(int id)
    {
        await TaskService.DeleteTaskAsync(id);
        Tasks = await TaskService.GetTasksAsync();
    }
}
